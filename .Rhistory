mutate(count = 1) %>%
mutate(`Online` = as.character(`Online`)) %>%
group_by(`Online`) %>%
summarize(freq = sum(count))
library(tidyverse)
# Online
online <- caps %>%
select(Online) %>%
mutate(count = 1) %>%
mutate(`Online` = as.character(`Online`)) %>%
group_by(`Online`) %>%
summarize(freq = sum(count))
ggplot(online, aes(x="", y=freq, fill=`Online`)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) +
ggtitle("Distribution of Online") +
theme_void()
View(online)
ggplot(collegeComp, aes(fill=Type, y=Percentage, x=College)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("College Distribution Comparison between Actual vs. Sample") +
theme_minimal()
ggplot(data = classComp, aes(fill=Type, y=Percentage, x=`Class Level`)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Class Level Distribution Comparison between Actual vs. Sample") +
theme_minimal()
()
ggplot(genderComp, aes(fill=Type, y=Percentage, x=Gender)) +
geom_bar(position="dodge", stat="identity")  +
ggtitle("Gender Distribution Comparison between Actual vs. Sample") +
theme_minimal()
ggplot(collegeComp, aes(fill=Type, y=Percentage, x=College)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("College Distribution Comparison between Actual vs. Sample") +
theme_minimal()
ggplot(raceComp, aes(fill=Type, y=Percentage, x=`Race/Ethnicity`)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Race Distribution Comparison between Actual vs. Sample") +
theme_minimal()
ggplot(genderComp, aes(fill=Type, y=Percentage, x=Gender)) +
geom_bar(position="dodge", stat="identity")  +
ggtitle("Gender Distribution Comparison between Actual vs. Sample") +
theme_minimal()
ggplot(data = classComp, aes(fill=Type, y=Percentage, x=`Class Level`)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Class Level Distribution Comparison between Actual vs. Sample") +
theme_minimal()
ggplot(collegeComp, aes(fill=Type, y=Percentage, x=College)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("College Distribution Comparison between Actual vs. Sample") +
theme_minimal()
sampleCollege <- caps %>%
caps[caps$Online == 1,] %>%
select(College) %>%
mutate(count = 1) %>%
group_by(College) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = 100*freq/sum(freq))
sampleCollege <- caps[caps$Online == 1,] %>%
select(College) %>%
mutate(count = 1) %>%
group_by(College) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = 100*freq/sum(freq))
# Comparing Distributions (Class)
classDist <- classDist %>%
mutate(Type = "Actual")
sampleClass <- sampleClass %>%
select(Class, percentage) %>%
rename(`Class Level` = Class, Percentage = percentage) %>%
mutate(Type = "Sample")
classComp <- rbind(classDist, sampleClass)
ggplot(data = classComp, aes(fill=Type, y=Percentage, x=`Class Level`)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Class Level Distribution Comparison between Actual vs. Sample") +
theme_minimal()
View(sampleCollege)
View(sampleClass)
View(sampleClass)
sampleClass <- sampleClass %>%
select(Class, percentage, freq) %>%
rename(`Class Level` = Class, Percentage = percentage) %>%
mutate(Type = "Sample")
sampleCollege <- caps[caps$Online == 1,] %>%
select(College) %>%
mutate(count = 1) %>%
group_by(College) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = 100*freq/sum(freq))
sampleClass <- sampleClass %>%
select(Class, percentage, freq) %>%
rename(`Class Level` = Class, Percentage = percentage) %>%
mutate(Type = "Sample")
View(sampleClass)
View(caps)
sampleClass <- caps[caps$Online == 1,] %>%
select(Class) %>%
mutate(count = 1) %>%
group_by(Class) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = 100*freq/sum(freq))
# Comparing Distributions (Class)
classDist <- classDist %>%
mutate(Type = "Actual")
sampleClass <- sampleClass %>%
select(Class, percentage, freq) %>%
rename(`Class Level` = Class, Percentage = percentage) %>%
mutate(Type = "Sample")
ggplot(data = classComp, aes(fill=Type, y=Percentage, x=`Class Level`)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Class Level Distribution Comparison between Actual vs. Sample") +
theme_minimal()
sampleClass <- caps[caps$Online == 0,] %>%
select(Class) %>%
mutate(count = 1) %>%
group_by(Class) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = 100*freq/sum(freq))
# Comparing Distributions (Class)
classDist <- classDist %>%
mutate(Type = "Actual")
sampleClass <- sampleClass %>%
select(Class, percentage, freq) %>%
rename(`Class Level` = Class, Percentage = percentage) %>%
mutate(Type = "Sample")
classComp <- rbind(classDist, sampleClass)
ggplot(data = classComp, aes(fill=Type, y=Percentage, x=`Class Level`)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Class Level Distribution Comparison between Actual vs. Sample") +
theme_minimal()
sampleClass <- sampleClass %>%
select(Class, percentage) %>%
rename(`Class Level` = Class, Percentage = percentage) %>%
mutate(Type = "Sample")
sampleClass <- caps[caps$Online == 0,] %>%
select(Class) %>%
mutate(count = 1) %>%
group_by(Class) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = 100*freq/sum(freq))
# Comparing Distributions (Class)
classDist <- classDist %>%
mutate(Type = "Actual")
sampleClass <- sampleClass %>%
select(Class, percentage) %>%
rename(`Class Level` = Class, Percentage = percentage) %>%
mutate(Type = "Sample")
classComp <- rbind(classDist, sampleClass)
ggplot(data = classComp, aes(fill=Type, y=Percentage, x=`Class Level`)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Class Level Distribution Comparison between Actual vs. Sample") +
theme_minimal()
sampleClass <- caps[caps$Online == 1,] %>%
select(Class) %>%
mutate(count = 1) %>%
group_by(Class) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = 100*freq/sum(freq))
# Comparing Distributions (Class)
classDist <- classDist %>%
mutate(Type = "Actual")
sampleClass <- sampleClass %>%
select(Class, percentage) %>%
rename(`Class Level` = Class, Percentage = percentage) %>%
mutate(Type = "Sample")
classComp <- rbind(classDist, sampleClass)
ggplot(data = classComp, aes(fill=Type, y=Percentage, x=`Class Level`)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("Class Level Distribution Comparison between Actual vs. Sample") +
theme_minimal()
ggplot(serious, aes(x = `Serious Issue`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of Serious Issue")
library(tidyverse)
ggplot(serious, aes(x = `Serious Issue`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of Serious Issue")
View(serious)
serious <- serious %>% add_row(`Serious Issue` = 1, freq = 0)
serious <- serious %>% add_row(`Serious Issue` = '1', freq = 0)
ggplot(serious, aes(x = `Serious Issue`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of Serious Issue")
caps.on <- caps[caps$Online == 1,]
caps.off <- caps[caps$Online == 0,]
# testing all variables between online vs offline
t_test(caps.off$`Serious Issue`, caps.on$`Serious Issue`)
t_test(caps.off$`Personal Mental Health`, caps.on$`Personal Mental Health`)
t_test(caps.off$`Stress Level`, caps.on$`Stress Level`)
t_test(caps.off$`Personal Mental Health`, caps.on$`Personal Mental Health`)
t_test(caps.off$`Stress Level`, caps.on$`Stress Level`)
t_test(caps.off$`Serious Issue`, caps.on$`Serious Issue`)
t_test(caps.off$`Academic Performance`, caps.on$`Academic Performance`)
t_test(caps.off$`CAPS Adequacy`, caps.on$`CAPS Adequacy`)
t_test(caps.off$`CAPS Usage`, caps.on$`CAPS Usage`)
t_test(complete.cases(aps.off$`CAPS Usage`), complete.cases(caps.on$`CAPS Usage`))
t_test(complete.cases(caps.off$`CAPS Usage`), complete.cases(caps.on$`CAPS Usage`))
t_test(caps.off$Funding, caps.on$Funding)
t_test(caps.off$`No-show Fee`, caps.on$`No-show Fee`)
t_test(caps.off$`ASUN`, caps.on$`ASUN`)
t_test(caps.off[caps.off$ASUN != 0,]$`ASUN`, caps.on[caps.on$ASUN != 0,]$`ASUN`)
t_test(caps.f[caps.f$ASUN != 0,]$`ASUN`, caps.n[caps.n$ASUN != 0,]$`ASUN`)
t_test(caps.off[caps.off$ASUN != 0,]$`ASUN`, caps.on[caps.on$ASUN != 0,]$`ASUN`)
t_test(caps.off$`No-show Fee`, caps.on$`No-show Fee`)
t_test(caps.off$Funding, caps.on$Funding)
t_test(caps.off$Funding, caps.on$Funding)
caps.know <- caps[caps$`CAPS Usage` == 'Yes',]
caps.dk <- caps[!(caps$`CAPS Usage` == 'Yes'),]
# Knowledge
t_test(caps.know$`Serious Issue`, caps.dk$`Serious Issue`)
t_test(caps.know$`Personal Mental Health`, caps.dk$`Personal Mental Health`)
t_test(caps.know$`Stress Level`, caps.dk$`Stress Level`)
t_test(caps.know$`Serious Issue`, caps.dk$`Serious Issue`)
t_test(caps.know$`Personal Mental Health`, caps.dk$`Personal Mental Health`)
t_test(caps.know$`Serious Issue`, caps.dk$`Serious Issue`)
t_test(caps.off$Informed, caps.on$Informed)
t_test(caps.know$Informed, caps.dk$Informed)
t_test(caps.know$`Academic Performance`, caps.dk$`Academic Performance`)
t_test(caps.know$`CAPS Adequacy`, caps.dk$`CAPS Adequacy`)
t_test(caps.know$Funding, caps.dk$Funding)
t_test(caps.know$`No-show Fee`, caps.dk$`No-show Fee`)
t_test(caps.know[caps.know$ASUN != 0,]$`ASUN`, caps.dk[caps.dk$ASUN != 0,]$`ASUN`)
ggplot(pmh, aes(x = `Personal Mental Health`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of Personal Mental Health")
ggplot(stress, aes(x = `Stress Level`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of Stress Level")
stress <- stress %>% add_row(`Stress Level` = '1', freq = 0)
ggplot(stress, aes(x = `Stress Level`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of Stress Level")
# Academic Performance
academic <- caps %>%
select(`Academic Performance`) %>%
mutate(count = 1) %>%
mutate(`Academic Performance` = as.character(`Academic Performance`)) %>%
group_by(`Academic Performance`) %>%
summarize(freq = sum(count))
ggplot(academic, aes(x = `Academic Performance`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of Academic Performance")
ggplot(informed, aes(x = Informed, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of Informed")
caps.no0 <- caps[caps$ASUN != 0,]
cor(caps.no0$`Serious Issue`, caps.no0$`Personal Mental Health`)
View(caps.no0)
as.numeric(caps.no0$`Personal Mental Health`)
cor(as.numeric(caps.no0$`Serious Issue`),
as.numeric(caps.no0$`Personal Mental Health`))
typeof(caps.no0$`Serious Issue`)
cor(complete.cases(caps.no0$`Serious Issue`),
complete.cases(caps.no0$`Personal Mental Health`))
cor(complete.cases(caps.no0$Informed),
complete.cases(caps.no0$`Personal Mental Health`))
cor(complete.cases(caps.no0$`Stress Level`),
complete.cases(caps.no0$`Personal Mental Health`))
cor(complete.cases(caps$`Stress Level`),
complete.cases(caps$`Personal Mental Health`))
typeof(caps$`Stress Level`)
lmod <- lm(`Stress Level` ~ `Personal Mental Health`, caps)
summary(lmod)
cor(complete.cases(caps$`Stress Level`),
complete.cases(caps$`Personal Mental Health`))
summary(lmod)
lmod <- lm(`Stress Level` ~ `Personal Mental Health`, caps)
summary(lmod)
lmod <- lm(`ASUN` ~ Informed, caps.no0)
summary(lmod)
lmod <- lm(Informed ~ `Personal Mental Health`, caps)
summary(lmod)
lmod <- lm(Academic ~ `Personal Mental Health`, caps)
summary(lmod)
lmod <- lm(academic ~ `Personal Mental Health`, caps)
lmod <- lm(`Academic Performance` ~ `Personal Mental Health`, caps)
summary(lmod)
lmod <- lm(`CAPS Adequacy` ~ Informed, caps)
summary(lmod)
lmod <- lm(ASUN ~ `CAPS Adequacy`, caps.no0)
summary(lmod)
lmod <- lm(Funding ~ Informed, caps)
summary(lmod)
lmod <- lm(ASUN ~ Funding, caps.no0)
summary(lmod)
lmod <- lm(ASUN ~ `Serious Issue`, caps.no0)
summary(lmod)
lmod <- lm(`Serious Issue` ~ Funding, caps)
summary(lmod)
ggplot(adq, aes(x = `CAPS Adequacy`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of CAPS Adequacy")
ggplot(usage, aes(x="", y=freq, fill=`CAPS Usage`)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) +
ggtitle("Distribution of CAPS Usage Knowledge") +
theme_void()
ggplot(usage, aes(x = `CAPS Usage`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of CAPS Usage")''
ggplot(usage, aes(x = `CAPS Usage`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of CAPS Usage")
ggplot(funding, aes(x = Funding, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of Funding")
ggplot(noshow, aes(x = `No-show Fee`, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of No-Show Fee")
ggplot(asun, aes(x = ASUN, y=freq)) +
geom_bar(position="dodge", stat="identity", color="lightblue", fill="lightblue") +
theme_minimal() +
ggtitle("Distribution of ASUN")
summary(caps$`Serious Issue`)
serious <- serious %>% mutate(percentage = freq/sum(freq))
serious <- serious %>% mutate(percentage = (freq*100)/sum(freq))
summary(caps$`Serious Issue`)
# testing all variables between freshman vs others
t_test(caps.f$`Serious Issue`, caps.n$`Serious Issue`)
# testing all variables between online vs offline
t_test(caps.off$`Serious Issue`, caps.on$`Serious Issue`)
# Knowledge
t_test(caps.know$`Serious Issue`, caps.dk$`Serious Issue`)
lmod <- lm(`Serious Issue` ~ Funding, caps)
summary(lmod)
summary(pmh)
summary(caps$`Personal Mental Health`)
# Personal Mental Health
pmh <- caps %>%
select(`Personal Mental Health`) %>%
mutate(count = 1) %>%
mutate(`Personal Mental Health` = as.character(`Personal Mental Health`)) %>%
group_by(`Personal Mental Health`) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = freq * 100 / sum(freq))
View(pmh)
summary(caps$`Personal Mental Health`)
View(caps)
t_test(caps.know$`Personal Mental Health`, caps.dk$`Personal Mental Health`)
t_test(caps.off$`Personal Mental Health`, caps.on$`Personal Mental Health`)
t_test(caps.f$`Personal Mental Health`, caps.n$`Personal Mental Health`)
summary(caps$`Stress Level`)
View(stress)
# Stress Level
stress <- caps %>%
select(`Stress Level`) %>%
mutate(count = 1) %>%
mutate(`Stress Level` = as.character(`Stress Level`)) %>%
group_by(`Stress Level`) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = freq * 100 / sum(freq))
library(tidyverse)
# Stress Level
stress <- caps %>%
select(`Stress Level`) %>%
mutate(count = 1) %>%
mutate(`Stress Level` = as.character(`Stress Level`)) %>%
group_by(`Stress Level`) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = freq * 100 / sum(freq))
View(stress)
t_test(caps.f$`Stress Level`, caps.n$`Stress Level`)
t_test(caps.off$`Stress Level`, caps.on$`Stress Level`)
caps.on <- caps[caps$Online == 1,]
caps.off <- caps[caps$Online == 0,]
t_test(caps.off$`Stress Level`, caps.on$`Stress Level`)
caps.know <- caps[caps$`CAPS Usage` == 'Yes',]
caps.dk <- caps[!(caps$`CAPS Usage` == 'Yes'),]
t_test(caps.know$`Stress Level`, caps.dk$`Stress Level`)
lmod <- lm(`Stress Level` ~ `Personal Mental Health`, caps)
summary(lmod)
# Academic Performance
academic <- caps %>%
select(`Academic Performance`) %>%
mutate(count = 1) %>%
mutate(`Academic Performance` = as.character(`Academic Performance`)) %>%
group_by(`Academic Performance`) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = freq * 100 / sum(freq))
summary(caps$`Academic Performance`)
view(academic)
t_test(caps.know$`Academic Performance`, caps.dk$`Academic Performance`)
t_test(caps.off$`Academic Performance`, caps.on$`Academic Performance`)
t_test(caps.f$`Academic Performance`, caps.n$`Academic Performance`)
lmod <- lm(`Academic Performance` ~ `Personal Mental Health`, caps)
summary(lmod)
lmod <- lm(`Academic Performance` ~ `Stress Level`, caps)
summary(lmod)
# CAPS Adequacy
adq <- caps %>%
select(`CAPS Adequacy`) %>%
mutate(count = 1) %>%
mutate(`CAPS Adequacy` = as.character(`CAPS Adequacy`)) %>%
group_by(`CAPS Adequacy`) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = freq * 100 / sum(freq))
summary(caps$`CAPS Adequacy`)
summary(caps$Informed)
# Informed
informed <- caps %>%
select(Informed) %>%
mutate(count = 1) %>%
mutate(Informed = as.character(Informed)) %>%
group_by(Informed) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = freq * 100 / sum(freq))
view(informed)
t_test(caps.know$Informed, caps.dk$Informed)
t_test(caps.off$Informed, caps.on$Informed)
t_test(caps.f$Informed, caps.n$Informed)
# CAPS Adequacy
adq <- caps %>%
select(`CAPS Adequacy`) %>%
mutate(count = 1) %>%
mutate(`CAPS Adequacy` = as.character(`CAPS Adequacy`)) %>%
group_by(`CAPS Adequacy`) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = freq * 100 / sum(freq))
summary(caps$`CAPS Adequacy`)
view(adq)
lmod <- lm(ASUN ~ `CAPS Adequacy`, caps.no0)
summary(lmod)
lmod <- lm(ASUN ~ `CAPS Adequacy`, caps.no0)
caps.no0 <- caps[caps$ASUN != 0,]
lmod <- lm(ASUN ~ `CAPS Adequacy`, caps.no0)
summary(lmod)
t_test(caps.know$`CAPS Adequacy`, caps.dk$`CAPS Adequacy`)
t_test(caps.off$`CAPS Adequacy`, caps.on$`CAPS Adequacy`)
t_test(caps.f$`CAPS Adequacy`, caps.n$`CAPS Adequacy`)
t_test(caps.off$`CAPS Adequacy`, caps.on$`CAPS Adequacy`)
caps.female <- caps[caps$Gender == "Female",]
caps.male <- caps[caps$Gender == "Male",]
# testing all variables between male vs female
t_test(caps.female$`Serious Issue`, caps.male$`Serious Issue`)
t_test(caps.female$`Personal Mental Health`, caps.male$`Personal Mental Health`)
t_test(caps.female$`Stress Level`, caps.male$`Stress Level`)
t_test(caps.female$Informed, caps.male$Informed)
t_test(caps.female$`Academic Performance`, caps.male$`Academic Performance`)
t_test(caps.female$`CAPS Adequacy`, caps.male$`CAPS Adequacy`)
t_test(caps.female$Funding, caps.male$Funding)
t_test(caps.female$`No-show Fee`, caps.male$`No-show Fee`)
t_test(caps.female[caps.female$ASUN != 0,]$`ASUN`, caps.male[caps.male$ASUN != 0,]$`ASUN`)
t_test(caps.know$`CAPS Adequacy`, caps.dk$`CAPS Adequacy`)
t_test(caps.off$`CAPS Adequacy`, caps.on$`CAPS Adequacy`)
t_test(caps.f$`CAPS Adequacy`, caps.n$`CAPS Adequacy`)
# CAPS Funding
funding <- caps %>%
select(Funding) %>%
mutate(count = 1) %>%
mutate(Funding = as.character(Funding)) %>%
group_by(Funding) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = freq * 100 / sum(freq))
summary(caps$Funding)
view(funding)
# CAPS No-Show Fee
noshow <- caps %>%
select(`No-show Fee`) %>%
mutate(count = 1) %>%
mutate(`No-show Fee` = as.character(`No-show Fee`)) %>%
group_by(`No-show Fee`) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = freq * 100 / sum(freq))
summary(caps$`No-show Fee`)
t_test(caps.know$`No-show Fee`, caps.dk$`No-show Fee`)
t_test(caps.off$`No-show Fee`, caps.on$`No-show Fee`)
t_test(caps.f$`No-show Fee`, caps.n$`No-show Fee`)
t_test(caps.female$`No-show Fee`, caps.male$`No-show Fee`)
view(noshow)
# ASUN
asun <- caps %>%
select(`ASUN`) %>%
mutate(count = 1) %>%
filter(ASUN > 0) %>%
mutate(`ASUN` = as.character(`ASUN`)) %>%
group_by(`ASUN`) %>%
summarize(freq = sum(count)) %>%
mutate(percentage = freq * 100 / sum(freq))
summary(caps[caps$ASUN != 0,]$ASUN)
view(asun)
lmod <- lm(`ASUN` ~ Informed, caps.no0)
summary(lmod)
lmod <- lm(ASUN ~ `CAPS Adequacy`, caps.no0)
summary(lmod)
lmod <- lm(ASUN ~ Funding, caps.no0)
summary(lmod)
view(caps)
lmod <- lm(ASUN ~ `No-Show Fee`, caps.no0)
lmod <- lm(ASUN ~ `No-show Fee`, caps.no0)
summary(lmod)
lmod <- lm(`CAPS Adequacy` ~ Informed, caps)
summary(lmod)
lmod <- lm(`ASUN` ~ Informed, caps.no0)
summary(lmod)
ggplot(data = caps, aes(x = Informed, y=`CAPS Adequacy`)) +
geom_point()
library(tidyverse)
ggplot(data = caps, aes(x = Informed, y=`CAPS Adequacy`)) +
geom_point()
